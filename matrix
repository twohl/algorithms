#include<iostream>
using namespace std;
struct matrix
{
    int a[10][10];
    int l;
    int c;
};
int matrix_chain_order(int m[10][10],int s[10][10],matrix p[],int n)
{
    for(int l=2;l<=n;l++)
    {
        for(int i=0;i<n-l+1;i++)
        {
            int j = i+l-1;
            m[i][j] = 9999999999999;
            for(int k = i;k<j;k++)
            {
                int q = p[i].c*p[k].l*p[j].c + m[i][k] + m[k+1][j];
                if(q < m[i][j])
                {
                    m[i][j] = q;
                    s[i][j] = k;
                }
            }

        }
    }
}
void print_optimal_parens(int s[10][10],int i,int j)
{
    if(i == j)
        cout<<"A";
    else{
        cout<<"(";
        print_optimal_parens(s,i,s[i][j]);
        print_optimal_parens(s,s[i][j]+1,j);
        cout<<")";
    }
}/*
int main()
{
    int m[10][10];
    int s[10][10];
    matrix p[4];
    p[0].l = 3;
    p[0].c = 4;
    p[1].l = 5;
    p[1].c = 3;
    p[2].l = 2;
    p[2].c = 5;
    p[3].l = 7;
    p[3].c = 2;
    for(int i=0;i<10;i++)
        for(int j=0;j<10;j++)
            m[i][j] = 0;
    matrix_chain_order(m,s,p,4);
    print_optimal_parens(s,0,3);
    return 0;

}
*/
