#include<iostream>
using namespace std;
void MERGE(int a[],int p,int q,int r)
{
    int n1 = q-p+1;
    int n2 = r-q;
    int l[n1];
    int ri[n2];
    for(int i=0;i<n1;i++)
        l[i] = a[p+i];
    for(int i=0;i<n2;i++)
        ri[i] = a[q+1+i];
    int ln = 0;
    int rn = 0;
    for(int i=p;i<=r;i++)
    {
        if(ln >= n1)
        {
            a[i] = ri[rn];
            rn++;
        }else if(rn >= n2)
        {
            a[i] = l[ln];
            ln++;
        }else if(l[ln] < ri[rn])
        {
            a[i] = l[ln];
            ln++;
        }else{
            a[i] = ri[rn];
            rn++;
        }
    }

}
void MERGE_SORT(int a[],int p,int r)
{
    if(p >= r)
        return;
    int q = (p + r) / 2;
    MERGE_SORT(a,p,q);
    MERGE_SORT(a,q+1,r);
    MERGE(a,p,q,r);
}
/*
test
int main()
{
    int a[] = {1,23,12,3,456,45,3,4,663,33};
    int len = sizeof(a)/sizeof(a[0]);
    MERGE_SORT(a,0,len-1);
    for(int i=0;i<len;i++)
    {
        cout<<a[i]<<endl;
    }
}*/
