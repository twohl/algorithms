#include<iostream>
using namespace std;
void max_heapify(int a[],int i,int n)
{
    int s = i;
    if(2*i<n&&a[2*i]<a[s])
        s = 2*i;
    if(2*i+1<n&&a[2*i+1]<a[s])
        s = 2*i+1;
    if(s != i)
    {
        int temp;
        temp = a[s];
        a[s] = a[i];
        a[i] = temp;
        max_heapify(a,s,n);
    }
}
void build_heap(int a[],int n)
{
    for(int i=(n-1)/2;i>0;i--)
        max_heapify(a,i,n);
}
void heap_sort(int a[],int n)
{
    for(int i=n-1;i>1;i--)
    {
        //cout<<a[1];
        int temp;
        temp = a[1];
        a[1] = a[n-1];
        a[n-1] =temp;
        n--;
        max_heapify(a,1,n);
    }

}
/*
test
because the first number's index is zero ,don't use it make the problem easier. 
int main()
{
    int a[] = {1,34,2,32,11,87,44,3,77,5,44};
    int n = 11;
    build_heap(a,n);
    heap_sort(a,n);
    for(int i=1;i<n;i++)
        cout<<a[i]<<endl;
}
*/
